// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

model Reservation {
  id                String              @id @default(uuid())
  name              String
  email             String
  phone             String
  date              DateTime
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  garageReservation GarageReservation[]
  garageSpots       GarageSpots[]

  @@index([email])
}

model Garage {
  id                String              @id @default(uuid())
  name              String
  zipcode           String
  address           String
  country           String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  garageReservation GarageReservation[]
  garageSpots       GarageSpots[]

  @@index([name])
}

model GarageReservation {
  id            String      @id @default(uuid())
  garageId      String
  garage        Garage      @relation(fields: [garageId], references: [id])
  reservationId String
  reservation   Reservation @relation(fields: [reservationId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Vehicle       Vehicle?    @relation(fields: [vehicleId], references: [id])
  vehicleId     String?
}

model GarageSpots {
  id            String      @id @default(uuid())
  garageId      String
  garage        Garage      @relation(fields: [garageId], references: [id])
  reservationId String
  reservation   Reservation @relation(fields: [reservationId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Vehicle       Vehicle?    @relation(fields: [vehicleId], references: [id])
  vehicleId     String?
}

model Vehicle {
  id                String              @id @default(uuid())
  licensePlate      String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  vehicleType       VehicleType
  GarageReservation GarageReservation[]
  GarageSpots       GarageSpots[]

  @@index([licensePlate])
}

enum VehicleType {
  CAR
  MOTORCYCLE
  BIKE
}
