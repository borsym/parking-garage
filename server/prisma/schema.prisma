// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// TODO create a schema for representing the parking garage structure

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id          String        @id @default(uuid())
  email       String        @unique
  name        String
  password    String
  role        UserRole
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Reservation Reservation[]
  Vehicle     Vehicle[]

  @@index([email])
}

model Garage {
  id          String        @id @default(uuid())
  name        String
  zipcode     String
  address     String
  country     String
  city        String
  Spot        Spot[]
  Reservation Reservation[]
  // define a schema that will be used to store the representation of the garage

  @@index([name])
}

model Spot {
  id          String        @id @default(uuid())
  garageId    String
  garage      Garage        @relation(fields: [garageId], references: [id])
  status      SpotStatus
  vehicleType VehicleType[]
  Reservation Reservation[]
  // define a schema that will be used to store the representation of the garage

  @@index([garageId])
}

model Reservation {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  garageId  String
  garage    Garage   @relation(fields: [garageId], references: [id])
  spotId    String
  spot      Spot     @relation(fields: [spotId], references: [id])
  vehicleId String
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  startDate DateTime
  endDate   DateTime

  @@index([userId, garageId, spotId, vehicleId])
}

model Vehicle {
  id          String        @id @default(uuid())
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  type        VehicleType
  plate       String
  Reservation Reservation[]

  @@index([plate])
}

enum VehicleType {
  CAR
  MOTORCYCLE
  BIKE
}

enum SpotStatus {
  AVAILABLE
  RESERVED
  OCCUPIED
}

enum UserRole {
  ADMIN
  USER
}
